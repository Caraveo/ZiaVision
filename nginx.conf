# Default server block to handle unknown domains and IP access
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 $scheme://ziavision.com$request_uri;
}

# Redirect ziawe.com and ziateam.com to ziavision.com
server {
    listen 80;
    server_name ziawe.com www.ziawe.com ziateam.com www.ziateam.com;
    return 301 $scheme://ziavision.com$request_uri;
}

# Main server block for ziavision.com
server {
    listen 80;
    server_name ziavision.com www.ziavision.com;

    # Redirect www to non-www
    if ($host = www.ziavision.com) {
        return 301 $scheme://ziavision.com$request_uri;
    }

    # Increase max body size for video uploads
    client_max_body_size 500M;

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Updated security headers with broader CSP
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: *.ziavision.com *.amazonaws.com; media-src 'self' blob: *.ziavision.com *.amazonaws.com; connect-src 'self' *.ziavision.com *.amazonaws.com; img-src 'self' data: blob: *.ziavision.com *.amazonaws.com;" always;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    }

    # Handle video files
    location ~* \.(mp4|webm|ogg|ogv)$ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
        proxy_cache_bypass $http_range;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        
        # Enable partial content requests
        proxy_set_header Accept-Ranges bytes;
        
        # CORS for video files
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Cache static files
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg)$ {
        proxy_pass http://localhost:3000;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # CORS for static files
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
    }

    # Return 404 for all other php files not matching the front controller
    location ~ /\.(?!well-known).* {
        deny all;
    }
} 